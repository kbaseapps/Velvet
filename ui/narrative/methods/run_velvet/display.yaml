#
# define display information
#
name: Velvet Assembler - v1.2.10
tooltip: |
      Assemble reads using Velvet. Velvet consists of two main parts - Velveth and Velvetg.
screenshots: []

icon: velvet-blue.png

#
# define a set of similar methods that might be useful to the user
#
suggestions:
    apps:
        related:
            []
        next:
            []
    methods:
        related:
            []
        next:
            [annotate_contigset]

#
# Configure the display and description of parameters
#
parameters :
    read_libraries :
        ui-name : ReadsLibrary
        short-hint : The ReadsLibrary to be assembled.
    hash_length :
        ui-name : Hast Length
        short-hint : |
            Select an integer for the length of hash.
    output_contigset_name :
        ui-name : |
            Output ContigSet Name
        short-hint : |
            The name for the resulting assembly (ContigSet) object that will be saved in the Narrative.
    min_contig_length :
        ui-name : |
            Minimal Contig Length
        short-hint : |
            The shortest length of a contig that can be accepted int he resulting set of Contigs.
    cov_cutoff :
        ui-name : |
            Coverage Cutoff
        short-hint : |
            Removal of low coverage nodes. We recommend the parameter to be left to the default value of "auto." For the manual setting of this parameter, we recommend a thorough read of Velvet's publication.
    ins_length :
        ui-name : |
            ins_length
        short-hint : |
            The expected distance between two paired-end reads (default is no read pairing).
    read_trkg :
        ui-name : |
            Track Short Read Positions
        short-hint : |
            The tracking of short read positions in assembly (default is no tracking).
    amos_file :
        ui-name : |
            Export AMOS File
        short-hint : |
            Export the Assembly to an AMOS file (default is no export).
    exp_cov :
        ui-name : |
            Expected Coverage
        short-hint : |
            A value of "auto" will set the expected coverage to the length weighted median contig coverage, and coverage cutoff to half that value (unless you override it with a manual setting). It can also be set automatically to half the length weighted median contig coverage depth.
    long_cov_cutoff :
        ui-name : |
            Long Coverage Cutoff
        short-hint : |
            Select to remove nodes with low long-read coverage. We recommend the parameter to be left to the default value of "auto" per user manual recommendation. For the manual setting of this parameter, we recommend a thorough read of Velvet's publication. Default is no removal.

description : |
    <p>This is a KBase wrapper for <a href=”https://www.ebi.ac.uk/~zerbino/velvet/”>Velvet 1.2.10</a>. This App takes a ReadsLibrary as input and produces an Assembly with a QUAST (Quality Assessment Tool for Genome Assemblies) report.</p>

    <p>Velvet is a classic <a href=”https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5531759/”>de-bruijn graph</a> based assembler. Velvet works by efficiently manipulating de Bruijn graphs through simplification and compression. It eliminates errors and resolves repeats by first using an error correction algorithm that merges sequences together. Repeats are then removed from the sequence via the repeat solver that separates paths which share local overlaps. Velvet is fast and robust, although it is no longer in active development. As a result of a successful run, the App will output an Assembly data object in the Data Panel and produce a QUAST (Quality Assessment Tool for Genome Assemblies) report. For details on how to interpret the report please refer to the <a href=”https://narrative.kbase.us/#catalog/apps/kb_quast/run_QUAST_app/release”>QUAST App documentation</a>. For more details about Velvet, please refer to the developer’s <a href=”https://github.com/dzerbino/velvet/blob/master/Manual.pdf”>manual</a>.</p>

    <p><b>Note that Velvet is not deterministic, and the results might differ when re-running an analysis.</b> For further explanation, click <a href=”https://www.biostars.org/p/86907/”>here</a> and <a href=”https://www.researchgate.net/post/Does_velvet_generate_different_assemblies_from_the_same_input_data_and_same_velvet_parameters”>here</a>.</p>

    <p><b>Known limitations</b>: Velvet assembly quality is known to be sensitive to the hash length.</p>


publications :
    -
        display-text : |
            Zerbino DR, Birney E. Velvet: Algorithms for de novo short read assembly using de Bruijn graphs. Genome Res. 2008; doi:10.1101/gr.074492.107
        link: https://genome.cshlp.org/content/early/2008/04/07/gr.074492.107
